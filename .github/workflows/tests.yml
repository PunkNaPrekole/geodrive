name: Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the Python version
        uses: astral-sh/setup-uv@v6
        with:
            python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --group test

      - name: Run tests
        run: uv run pytest tests/ --cov=./ --cov-report=xml -v

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml


  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - uses: actions/checkout@v4

      - name: Install uv and set the Python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --locked --group test

      - name: Run tests
        run: uv run pytest tests/ --cov=./ --cov-report=xml -v

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  test-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
    - uses: actions/checkout@v4

    - name: Install uv and set the Python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the project
      run: uv sync --locked --group test

    - name: Run tests
      run: uv run pytest tests/ --cov=./ --cov-report=xml -v

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
